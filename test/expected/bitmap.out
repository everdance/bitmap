DROP TABLE IF EXISTS test_tbl;
NOTICE:  table "test_tbl" does not exist, skipping
CREATE TABLE test_tbl (
	i	int4,
	t	text
);
CREATE INDEX bmidx ON test_tbl USING bitmap (i);
SELECT * FROM bm_metap('bmidx');
   magic    | ndistinct | start_blks 
------------+-----------+------------
 0xDABC9876 |         0 | 
(1 row)

INSERT INTO test_tbl VALUES (1, 'x'), (0, 'y'), (NULL, 'N');
SELECT * FROM bm_metap('bmidx');
   magic    | ndistinct | start_blks 
------------+-----------+------------
 0xDABC9876 |         3 | 2, 3, 4
(1 row)

SELECT * FROM bm_valuep('bmidx', 1);
 index | data 
-------+------
     1 | 1
     2 | 0
     3 | 
(3 rows)

SELECT * FROM bm_indexp('bmidx', 2);
 index | heap_blk |                                  bitmap                                  
-------+----------+--------------------------------------------------------------------------
     1 |        0 | 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
(1 row)

SELECT * FROM bm_indexp('bmidx', 3);
 index | heap_blk |                                  bitmap                                  
-------+----------+--------------------------------------------------------------------------
     1 |        0 | 00000002 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
(1 row)

SELECT * FROM bm_indexp('bmidx', 4);
 index | heap_blk |                                  bitmap                                  
-------+----------+--------------------------------------------------------------------------
     1 |        0 | 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
(1 row)

SET enable_seqscan=off;
EXPLAIN SELECT * FROM test_tbl WHERE i = 0;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Bitmap Heap Scan on test_tbl  (cost=4.05..13.51 rows=6 width=36)
   Recheck Cond: (i = 0)
   ->  Bitmap Index Scan on bmidx  (cost=0.00..4.04 rows=6 width=0)
         Index Cond: (i = 0)
(4 rows)

EXPLAIN SELECT * FROM test_tbl WHERE i IS NULL;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Bitmap Heap Scan on test_tbl  (cost=4.05..13.50 rows=6 width=36)
   Recheck Cond: (i IS NULL)
   ->  Bitmap Index Scan on bmidx  (cost=0.00..4.04 rows=6 width=0)
         Index Cond: (i IS NULL)
(4 rows)

SELECT * FROM test_tbl WHERE i = 0;
 i | t 
---+---
 0 | y
(1 row)

SELECT * FROM test_tbl WHERE i IS NULL;
 i | t 
---+---
   | N
(1 row)

DELETE FROM test_tbl;
INSERT INTO test_tbl SELECT i%2, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
SET enable_seqscan=on;
SET enable_bitmapscan=off;
SET enable_indexscan=off;
SELECT count(*) FROM test_tbl WHERE i = 0;
 count 
-------
  1000
(1 row)

SELECT count(*) FROM test_tbl WHERE i = 1;
 count 
-------
  1000
(1 row)

SELECT count(*) FROM test_tbl WHERE i = 7;
 count 
-------
     0
(1 row)

SELECT count(*) FROM test_tbl WHERE t = '5';
 count 
-------
   112
(1 row)

SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
 count 
-------
     0
(1 row)

SET enable_seqscan=off;
SET enable_bitmapscan=on;
SET enable_indexscan=on;
EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tbl WHERE i = 7;
               QUERY PLAN               
----------------------------------------
 Aggregate
   ->  Bitmap Heap Scan on test_tbl
         Recheck Cond: (i = 7)
         ->  Bitmap Index Scan on bmidx
               Index Cond: (i = 7)
(5 rows)

EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tbl WHERE t = '5';
           QUERY PLAN            
---------------------------------
 Aggregate
   ->  Seq Scan on test_tbl
         Filter: (t = '5'::text)
(3 rows)

EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
               QUERY PLAN               
----------------------------------------
 Aggregate
   ->  Bitmap Heap Scan on test_tbl
         Recheck Cond: (i = 7)
         Filter: (t = '5'::text)
         ->  Bitmap Index Scan on bmidx
               Index Cond: (i = 7)
(6 rows)

SELECT count(*) FROM test_tbl WHERE i = 7;
 count 
-------
     0
(1 row)

SELECT count(*) FROM test_tbl WHERE t = '5';
 count 
-------
   112
(1 row)

SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
 count 
-------
     0
(1 row)

DELETE FROM test_tbl;
INSERT INTO test_tbl SELECT i%10, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
VACUUM ANALYZE test_tbl;
SELECT count(*) FROM test_tbl WHERE i = 7;
 count 
-------
   200
(1 row)

SELECT count(*) FROM test_tbl WHERE t = '5';
 count 
-------
   112
(1 row)

SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
 count 
-------
    13
(1 row)

DELETE FROM test_tbl WHERE i > 1 OR t = '5';
VACUUM test_tbl;
INSERT INTO test_tbl SELECT i%10, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
SELECT count(*) FROM test_tbl WHERE i = 7;
 count 
-------
   200
(1 row)

SELECT count(*) FROM test_tbl WHERE t = '5';
 count 
-------
   112
(1 row)

SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
 count 
-------
    13
(1 row)

VACUUM FULL test_tbl;
SELECT count(*) FROM test_tbl WHERE i = 7;
 count 
-------
   200
(1 row)

SELECT count(*) FROM test_tbl WHERE t = '5';
 count 
-------
   112
(1 row)

SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
 count 
-------
    13
(1 row)

-- -- Try an unlogged table too
CREATE UNLOGGED TABLE test_tblu (
	i	int4,
	t	text
);
INSERT INTO test_tblu SELECT i%10, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
CREATE INDEX bitmapidxu ON test_tblu USING bitmap (i);
SET enable_seqscan=off;
SET enable_bitmapscan=on;
SET enable_indexscan=on;
EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tblu WHERE i = 7;
                 QUERY PLAN                  
---------------------------------------------
 Aggregate
   ->  Bitmap Heap Scan on test_tblu
         Recheck Cond: (i = 7)
         ->  Bitmap Index Scan on bitmapidxu
               Index Cond: (i = 7)
(5 rows)

EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tblu WHERE t = '5';
           QUERY PLAN            
---------------------------------
 Aggregate
   ->  Seq Scan on test_tblu
         Filter: (t = '5'::text)
(3 rows)

EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tblu WHERE i = 7 AND t = '5';
                 QUERY PLAN                  
---------------------------------------------
 Aggregate
   ->  Bitmap Heap Scan on test_tblu
         Recheck Cond: (i = 7)
         Filter: (t = '5'::text)
         ->  Bitmap Index Scan on bitmapidxu
               Index Cond: (i = 7)
(6 rows)

SELECT count(*) FROM test_tblu WHERE i = 7;
 count 
-------
   200
(1 row)

SELECT count(*) FROM test_tblu WHERE t = '5';
 count 
-------
   112
(1 row)

SELECT count(*) FROM test_tblu WHERE i = 7 AND t = '5';
 count 
-------
    13
(1 row)

RESET enable_seqscan;
RESET enable_bitmapscan;
RESET enable_indexscan;
-- Run amvalidator function on our opclasses
SELECT opcname, amvalidate(opc.oid)
FROM pg_opclass opc JOIN pg_am am ON am.oid = opcmethod
WHERE amname = 'bitmap'
ORDER BY 1;
     opcname     | amvalidate 
-----------------+------------
 char_ops        | t
 cidr_ops        | t
 float4_ops      | t
 float8_ops      | t
 inet_ops        | t
 int2_ops        | t
 int4_ops        | t
 int8_ops        | t
 text_ops        | t
 timestamp_ops   | t
 timestamptz_ops | t
 varchar_ops     | t
(12 rows)

