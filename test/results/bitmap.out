DROP TABLE IF EXISTS test_tbl;
NOTICE:  table "test_tbl" does not exist, skipping
CREATE TABLE test_tbl (
	i	int4,
	t	text
);
CREATE INDEX bmidx ON test_tbl USING bitmap (i);
SELECT * FROM bm_metap('bmidx');
   magic    | ndistinct | val_endblk | first_blks 
------------+-----------+------------+------------
 0xDABC9876 |         0 | 4294967295 | 
(1 row)

INSERT INTO test_tbl VALUES (1, 'x'), (0, 'y'), (NULL, 'N');
SELECT * FROM bm_metap('bmidx');
   magic    | ndistinct | val_endblk | first_blks 
------------+-----------+------------+------------
 0xDABC9876 |         3 |          1 | 2, 3, 4
(1 row)

SELECT * FROM bm_valuep('bmidx', 1);
 index | data 
-------+------
     1 | 1
     2 | 0
     3 | 
(3 rows)

SELECT * FROM bm_indexp('bmidx', 2);
 index | heap_blk |     bitmap     
-------+----------+----------------
     1 |        0 | 1 0 0 0 0 0 0 
(1 row)

SELECT * FROM bm_indexp('bmidx', 3);
 index | heap_blk |     bitmap     
-------+----------+----------------
     1 |        0 | 2 0 0 0 0 0 0 
(1 row)

SELECT * FROM bm_indexp('bmidx', 4);
 index | heap_blk |     bitmap     
-------+----------+----------------
     1 |        0 | 4 0 0 0 0 0 0 
(1 row)

SET enable_seqscan=off;
EXPLAIN SELECT * FROM test_tbl WHERE i = 0;
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Index Scan using bmidx on test_tbl  (cost=0.00..4.01 rows=6 width=36)
   Index Cond: (i = 0)
(2 rows)

EXPLAIN SELECT * FROM test_tbl WHERE i IS NULL;
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Index Scan using bmidx on test_tbl  (cost=0.00..4.01 rows=6 width=36)
   Index Cond: (i IS NULL)
(2 rows)

SELECT * FROM test_tbl WHERE i = 0;
 i | t 
---+---
 0 | y
(1 row)

SELECT * FROM test_tbl WHERE i IS NULL;
 i | t 
---+---
   | N
(1 row)

-- INSERT INTO test_tbl SELECT i%2, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
-- CREATE INDEX bitmapidx ON test_tbl USING bitmap (i);
-- SET enable_seqscan=on;
-- SET enable_bitmapscan=off;
-- SET enable_indexscan=off;
-- SELECT count(*) FROM test_tbl WHERE i = 0;
-- SELECT count(*) FROM test_tbl WHERE i = 1;
-- SET enable_seqscan=off;
-- SET enable_bitmapscan=on;
-- SET enable_indexscan=on;
-- EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tbl WHERE i = 7;
-- EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tbl WHERE t = '5';
-- EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
-- SELECT count(*) FROM test_tbl WHERE i = 7;
-- SELECT count(*) FROM test_tbl WHERE t = '5';
-- SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
-- DELETE FROM test_tbl;
-- INSERT INTO test_tbl SELECT i%10, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
-- VACUUM ANALYZE test_tbl;
-- SELECT count(*) FROM test_tbl WHERE i = 7;
-- SELECT count(*) FROM test_tbl WHERE t = '5';
-- SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
-- DELETE FROM test_tbl WHERE i > 1 OR t = '5';
-- VACUUM test_tbl;
-- INSERT INTO test_tbl SELECT i%10, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
-- SELECT count(*) FROM test_tbl WHERE i = 7;
-- SELECT count(*) FROM test_tbl WHERE t = '5';
-- SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
-- VACUUM FULL test_tbl;
-- SELECT count(*) FROM test_tbl WHERE i = 7;
-- SELECT count(*) FROM test_tbl WHERE t = '5';
-- SELECT count(*) FROM test_tbl WHERE i = 7 AND t = '5';
-- -- Try an unlogged table too
-- CREATE UNLOGGED TABLE test_tblu (
-- 	i	int4,
-- 	t	text
-- );
-- INSERT INTO test_tblu SELECT i%10, substr(md5(i::text), 1, 1) FROM generate_series(1,2000) i;
-- CREATE INDEX bitmapidxu ON test_tblu USING bitmap (i, t) WITH (col2 = 4);
-- SET enable_seqscan=off;
-- SET enable_bitmapscan=on;
-- SET enable_indexscan=on;
-- EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tblu WHERE i = 7;
-- EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tblu WHERE t = '5';
-- EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tblu WHERE i = 7 AND t = '5';
-- SELECT count(*) FROM test_tblu WHERE i = 7;
-- SELECT count(*) FROM test_tblu WHERE t = '5';
-- SELECT count(*) FROM test_tblu WHERE i = 7 AND t = '5';
-- RESET enable_seqscan;
-- RESET enable_bitmapscan;
-- RESET enable_indexscan;
-- -- Run amvalidator function on our opclasses
-- SELECT opcname, amvalidate(opc.oid)
-- FROM pg_opclass opc JOIN pg_am am ON am.oid = opcmethod
-- WHERE amname = 'bitmap'
-- ORDER BY 1;
-- --
